#!/usr/bin/env bash

# Load 
source "$(dirname "${BASH_SOURCE[0]}")/../libexec/tools/brew-dual-utility"

# Define Homebrew paths
brew_dual_pin_unpin() {
    local pin="$1"
    shift

    # Loop through all package arguments
    for PACKAGE in "$@"; do
        color_echo "INFO" "üîç Checking $PACKAGE..."

        # Pin/Unpin package on ARM Homebrew
        if is_installed "$ARM_BREW" "$PACKAGE" "$ARM_ARCH"; then         
            if [ "$pin" = true ]; then
                color_echo "INFO" "üì¶ Pinning $PACKAGE on ARM Homebrew..."
                $ARM_ARCH "$ARM_BREW" pin "$PACKAGE"

                color_echo "INFO" "üéâ Package pinned complete on ARM Homebrew!"
            else
                color_echo "INFO" "üì¶ Unpining $PACKAGE on ARM Homebrew..."
                $ARM_ARCH "$ARM_BREW" unpin "$PACKAGE"

                color_echo "INFO" "üéâ Package unpinned complete on ARM Homebrew!"
            fi
        else
            color_echo "WARN" "‚ö†Ô∏è $PACKAGE is not installed on ARM Homebrew. Skipping..."
        fi

        # Pin/Unpin package on X86 Homebrew
        if is_installed "$X86_BREW" "$PACKAGE" "$X86_ARCH"; then
            if [ "$pin" = true ]; then
                color_echo "INFO" "üì¶ Pinning $PACKAGE on x86 Homebrew..."
                $X86_ARCH "$X86_BREW" pin "$PACKAGE"

                color_echo "INFO" "üéâ Package pinned complete on X86 Homebrew!"
            else
                color_echo "INFO" "üì¶ Unpinning $PACKAGE on x86 Homebrew..."
                $X86_ARCH "$X86_BREW" unpin "$PACKAGE"

                color_echo "INFO" "üéâ Package unpinned complete on X86 Homebrew!"
            fi
        else
            color_echo "WARN" "‚ö†Ô∏è $PACKAGE is not installed on x86 Homebrew. Skipping..."
        fi
    done

}
